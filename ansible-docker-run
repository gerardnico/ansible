#!/bin/bash
# Run the Ansible docker image
# This script is called from the other one

if [[ $(uname -a) =~ "CYGWIN" ]]; then
  CYGWIN=1
else
  CYGWIN=0
fi

# Set the azure configuration
# You need to copy the file azure-conf-dist.cmd to azure-conf.cmd and set your values
AZURE_CONF_FILE="azure-conf.cmd"

if [ -f "$AZURE_CONF_FILE" ]; then
   # shellcheck disable=SC1090
   source "$AZURE_CONF_FILE"
fi

# Default Ansible version if not set
ANSIBLE_VERSION=${ANSIBLE_VERSION:-2.9}

declare -a args=("run" "--rm")

if [ "$1" == "bash" ]; then
  # The input device is not a TTY. If you are using mintty, try prefixing the command with 'winpty'
  # Docker should not run as an interactive session (only for the docker-bash script)
  args+=("-it")
fi

args+=("--entrypoint" "/ansible/bin/entrypoint.sh")

# Working Dir
# DOCKER_WORKING_DIR is the working directory that is set as a literal in the Dockerfile
DOCKER_WORKING_DIR="/ansible/playbooks"

# Mounting Pwd
PWD_DOCKER_FORMAT=$(pwd)
if [ $CYGWIN = 1 ] ; then
    # Cygwin to Docker Pwd format (ie --volume /c/current/workdir/from/host:/ansible/playbooks)
    # Note: Deleting the c part seems to work also (ie HOMEPATH=\Users\ngera)
    PWD_DOCKER_FORMAT=$(cygpath -aw "$PWD_DOCKER_FORMAT" | tr 'C:' '/c' | tr '\\' '/')
fi
args+=("--volume" "$PWD_DOCKER_FORMAT:$DOCKER_WORKING_DIR")

# User
#ANSIBLE_USER="ansible"
#args+=("--user" "$ANSIBLE_USER")

# Mounting SSH
SSH_DOCKER_FORMAT="$HOMEPATH/.ssh"
if [ $CYGWIN = 1 ] ; then
  SSH_DOCKER_FORMAT=$(cygpath -aw "$SSH_DOCKER_FORMAT" | tr 'C:' '/c' | tr '\\' '/')
fi
args+=("--volume" "$SSH_DOCKER_FORMAT:/root/.ssh")

# Setting the ANSIBLE_CONFIG value to avoid
# https://docs.ansible.com/ansible/devel/reference_appendices/config.html#cfg-in-world-writable-dir
# We get a warning so.
ANSIBLE_CONFIG=${ANSIBLE_CONFIG:-ansible.cfg}
args+=("--env" "ANSIBLE_CONFIG=$ANSIBLE_CONFIG")

# Home
ANSIBLE_HOME=${ANSIBLE_HOME:-$DOCKER_WORKING_DIR}
args+=("--env" "ANSIBLE_HOME=$ANSIBLE_HOME")
# DEFAULT_LOCAL_TMP depends of ansible home
# https://docs.ansible.com/ansible/latest/reference_appendices/config.html#default-local-tmp
args+=("--env" "ANSIBLE_LOCAL_TEMP=/tmp")

# SSH
echo "Env (SSH Key Passphrase)"
SSH_PREFIX='ANSIBLE_SSH_KEY_PASSPHRASE_'
for var in $(printenv | grep -P "^${SSH_PREFIX}")
do
  echo "The SSH variable $(echo "$var" | grep -oP "^${SSH_PREFIX}[^=]+") was passed to docker"
  args+=("--env" "$var")
done
echo

echo "Env (Script)"
echo "DOCKER_ANSIBLE_VERSION : $ANSIBLE_VERSION"
echo
echo "Env (Inside Docker)"
echo "ANSIBLE_CONFIG : $DOCKER_WORKING_DIR/$ANSIBLE_CONFIG"
echo "ANSIBLE_HOME   : $DOCKER_WORKING_DIR/$ANSIBLE_HOME"
echo

# Azure
if [ -n "$AZURE_CLIENT_ID" ]; then
    args+=("--env" "AZURE_CLIENT_ID=$AZURE_CLIENT_ID")
fi
if [ -n "$AZURE_SECRET" ]; then
    args+=("--env" "AZURE_SECRET=$AZURE_SECRET")
fi
if [ -n "$AZURE_SUBSCRIPTION_ID" ]; then
    args+=("--env" "AZURE_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID")
fi
if [ -n "$AZURE_TENANT" ]; then
    args+=("--env" "AZURE_TENANT=$AZURE_TENANT")
fi

# Hcloud
# https://docs.ansible.com/ansible/latest/collections/hetzner/hcloud/docsite/guides.html
if [ -n "$HCLOUD_TOKEN" ]; then
    args+=("--env" "HCLOUD_TOKEN=$HCLOUD_TOKEN")
fi

# Run Docker command
docker "${args[@]}" \
	gerardnico/ansible:"$ANSIBLE_VERSION" \
	"$@"

